# Seguridad de archivos PHP
<FilesMatch "\.php$">
    SetHandler application/x-httpd-php
    <LimitExcept GET POST OPTIONS>
        Require all denied
    </LimitExcept>
</FilesMatch>

# Bloquear acceso a archivos sensibles
<Files ~ "\.(env|log|sql|conf|bak|old|orig|save|tmp)$">
    Require all denied
</Files>

# Bloquear acceso a directorios ocultos
# <DirectoryMatch "^\.|\/\.">
#     Require all denied
# </DirectoryMatch>

# Headers de seguridad
<IfModule mod_headers.c>
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-Content-Type-Options "nosniff"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always unset X-Powered-By
    Header always unset Server
</IfModule>

RewriteEngine On

# Protección contra inyección de código (temporalmente deshabilitada para debugging)
# RewriteCond %{QUERY_STRING} (<|%3C).*script.*(>|%3E) [NC,OR]
# RewriteCond %{QUERY_STRING} GLOBALS(=|[|%[0-9A-Z]{0,2}) [OR]
# RewriteCond %{QUERY_STRING} _REQUEST(=|[|%[0-9A-Z]{0,2}) [OR]
# RewriteCond %{QUERY_STRING} ^.*(\[|\]|\(|\)|<|>|ê|"|;|\?|\*|=$).* [NC,OR]
# RewriteCond %{QUERY_STRING} ^.*(â|'|=|/|\\|\.\.|\||\||;|\?|\*|<|>|'|"|â|%22).* [NC]
# RewriteRule ^(.*)$ - [F,L]

# Forzar que todas las peticiones OPTIONS a archivos PHP sean procesadas por PHP
RewriteCond %{REQUEST_METHOD} OPTIONS
RewriteRule ^(.*\.php)$ $1 [L]

# Redirecciones para router.php si es necesario
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ router.php [QSA,L]

# Configuraciones de PHP para desarrollo (cambiar en producción)
php_value display_errors 0
php_value error_reporting E_ALL
php_value log_errors 1
php_value expose_php 0
php_value session.cookie_httponly 1
php_value session.cookie_secure 1
php_value session.use_only_cookies 1
